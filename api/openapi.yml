openapi: 3.0.1

info:
    title: DHBW42 API
    description: This is the API for DHBW42, a Q&A website for students.
    version: 1.0.0
    contact:
        name: Yannick Kirschen
        url: https://yannick.sh
        email: yannickkirschen@protonmail.com

servers:
    -   url: 'http://localhost:8000'
        description: dev

paths:
    /questions:
        get:
            summary: Get all questions.
            operationId: getQuestions

            responses:
                '200':
                    description: Returns all questions.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QuestionsResponse'

    /post/{id}:
        parameters:
            -   in: path
                name: id
                schema:
                    type: string
                required: true
                description: ID of the post to get.

        get:
            summary: Retrieve a single post by its ID.
            operationId: getPost

            responses:
                '200':
                    description: Returns the post.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostResponse'

        put:
            summary: Create a post.
            operationId: createPost

            requestBody:
                description: Data of the post to create.
                required: true

                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostCreation'

            responses:
                '200':
                    description: Returns the ID of the post.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostIdResponse'

        post:
            summary: Update an existing post.
            operationId: updatePost

            requestBody:
                description: Changes in the data to apply.
                required: true

                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostUpdate'

            responses:
                '200':
                    description: Returns the updated post.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostResponse'

        delete:
            summary: Delete a single post by its ID.
            operationId: deletePost

            responses:
                '200':
                    description: Returns the deleted post.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostResponse'

components:
    schemas:
        PostResponse:
            type: object

            properties:
                data:
                    $ref: '#/components/schemas/Post'

        PostIdResponse:
            type: object

            properties:
                data:
                    $ref: '#/components/schemas/PostId'

        Post:
            type: object
            description: The actual data of the post.

            required:
                - id
                - creator
                - content
                - dateCreated

            properties:
                id:
                    type: string
                    description: The ID of the post.
                    example: a7ej8dl0

                parent:
                    type: string
                    description: If the post has a parent post, this will be its ID. If not, this will be null.
                    example: slK9abnL

                children:
                    type: array
                    example:
                        - s3dnHJ3s
                        - pe94jHuz

                    items:
                        type: string
                        description: If the post has child posts, this will contain all second-level IDs of those posts.

                title:
                    type: string
                    description: The title of the post. May be a question or an answer. If the title is null, it must not be a question.
                    example: What is the answer to life, the universe, and everything?

                creator:
                    type: string
                    description: The person who created the post.
                    example: John Doe

                content:
                    type: string
                    description: The actual content of the post.
                    example: Here is some fancy text ...

                reactions:
                    type: array
                    description: If the post has reactions, this will contain those reactions and their count.

                    items:
                        $ref: '#/components/schemas/Reaction'

                dateCreated:
                    type: string
                    description: Date the post was created in ISO-8601 format.
                    example: '2022-01-01'

        PostCreation:
            type: object
            description: Data to submit when creating a post.

            required:
                - creator
                - content

            properties:
                parent:
                    type: string
                    description: If the post has a parent post, this must be its ID. If not, this must be null.
                    example: slK9abnL

                title:
                    type: string
                    description: The title of the post. May be a question or an answer. If the title is null, it is a question, hence there must be a parent.
                    example: What is the answer to life, the universe, and everything?

                creator:
                    type: string
                    description: The person who created the post.
                    example: John Doe

                content:
                    type: string
                    description: The actual content of the post.
                    example: Here is some fancy text ...

        PostId:
            type: object
            description: The ID of a post.

            required:
                - id

            properties:
                id:
                    type: string
                    description: The ID of the post.
                    example: a7ej8dl0

        PostUpdate:
            type: object
            description: Data to submit when updating a post. When properties are null, they'll be ignored.

            properties:
                title:
                    type: string
                    description: The new title of the post.
                    example: My updated title.

                content:
                    type: string
                    description: The new content of the post.
                    example: My updated content ...

                reaction:
                    $ref: '#/components/schemas/ReactionChange'

        Reaction:
            type: object
            description: Reactions on a post.

            required:
                - unicodeChar
                - amount

            properties:
                unicodeChar:
                    type: string
                    description: The unicode emoji of the reaction.
                    example: üëç

                amount:
                    type: integer
                    description: The number of reactions with this emoji.
                    minimum: 1
                    example: 14

        ReactionChange:
            type: object
            description: A change of a reaction. If the reaction does not exist yet, it'll be created. Negative amounts are not possible and will always be set to 0.

            required:
                - unicodeChar
                - change

            properties:
                unicodeChar:
                    type: string
                    description: The unicode emoji of the reaction.
                    example: üëç

                change:
                    type: integer
                    description: +1 if the amount increased, -1 if the amount decreased.

                    minimum: -1
                    maximum: 1
                    example: 1

        QuestionsResponse:
            type: object

            properties:
                data:
                    $ref: '#/components/schemas/Questions'

        Questions:
            type: array
            description: An array of question metadata.

            items:
                $ref: '#/components/schemas/Question'

        Question:
            type: object
            description: Metadata for a question. That is a post without a parent post.

            required:
                - id
                - title
                - creator
                - answerCount
                - dateCreated

            properties:
                id:
                    type: string
                    description: The ID of the question/post.
                    example: a7ej8dl0

                title:
                    type: string
                    description: The title of the question/post.
                    example: What is the answer to life, the universe, and everything?

                creator:
                    type: string
                    description: The person who created the question/post.
                    example: John Doe

                answerCount:
                    type: integer
                    description: Amount of answers on this question/post. That is the top-level childre of the post.
                    minimum: 0
                    example: 4

                dateCreated:
                    type: string
                    description: Date the question/post was created in ISO-8601 format.
                    example: '2022-01-01'
